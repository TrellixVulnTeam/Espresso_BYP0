{
  "model": "resnet101",
  "compressor": "dgc",
  "nodes": 4,
  "gpus_per_node": 8,
  "comp_ratio": 0.02,
  "hierarchical comm": false,
  "CPU compression": true,
  "PCIe": true,
  "tensor names": [
    "fc.bias",
    "fc.weight",
    "layer4.2.bn3.weight",
    "layer4.2.bn3.bias",
    "layer4.2.conv3.weight",
    "layer4.2.bn2.weight",
    "layer4.2.bn2.bias",
    "layer4.2.conv2.weight",
    "layer4.2.bn1.weight",
    "layer4.2.bn1.bias",
    "layer4.2.conv1.weight",
    "layer4.1.bn3.weight",
    "layer4.1.bn3.bias",
    "layer4.1.conv3.weight",
    "layer4.1.bn2.weight",
    "layer4.1.bn2.bias",
    "layer4.1.conv2.weight",
    "layer4.1.bn1.weight",
    "layer4.1.bn1.bias",
    "layer4.1.conv1.weight",
    "layer4.0.downsample.1.weight",
    "layer4.0.downsample.1.bias",
    "layer4.0.downsample.0.weight",
    "layer4.0.bn3.weight",
    "layer4.0.bn3.bias",
    "layer4.0.conv3.weight",
    "layer4.0.bn2.weight",
    "layer4.0.bn2.bias",
    "layer4.0.conv2.weight",
    "layer4.0.bn1.weight",
    "layer4.0.bn1.bias",
    "layer4.0.conv1.weight",
    "layer3.22.bn3.weight",
    "layer3.22.bn3.bias",
    "layer3.22.conv3.weight",
    "layer3.22.bn2.weight",
    "layer3.22.bn2.bias",
    "layer3.22.conv2.weight",
    "layer3.22.bn1.weight",
    "layer3.22.bn1.bias",
    "layer3.22.conv1.weight",
    "layer3.21.bn3.weight",
    "layer3.21.bn3.bias",
    "layer3.21.conv3.weight",
    "layer3.21.bn2.weight",
    "layer3.21.bn2.bias",
    "layer3.21.conv2.weight",
    "layer3.21.bn1.weight",
    "layer3.21.bn1.bias",
    "layer3.21.conv1.weight",
    "layer3.20.bn3.weight",
    "layer3.20.bn3.bias",
    "layer3.20.conv3.weight",
    "layer3.20.bn2.weight",
    "layer3.20.bn2.bias",
    "layer3.20.conv2.weight",
    "layer3.20.bn1.weight",
    "layer3.20.bn1.bias",
    "layer3.20.conv1.weight",
    "layer3.19.bn3.weight",
    "layer3.19.bn3.bias",
    "layer3.19.conv3.weight",
    "layer3.19.bn2.weight",
    "layer3.19.bn2.bias",
    "layer3.19.conv2.weight",
    "layer3.19.bn1.weight",
    "layer3.19.bn1.bias",
    "layer3.19.conv1.weight",
    "layer3.18.bn3.weight",
    "layer3.18.bn3.bias",
    "layer3.18.conv3.weight",
    "layer3.18.bn2.weight",
    "layer3.18.bn2.bias",
    "layer3.18.conv2.weight",
    "layer3.18.bn1.weight",
    "layer3.18.bn1.bias",
    "layer3.18.conv1.weight",
    "layer3.17.bn3.weight",
    "layer3.17.bn3.bias",
    "layer3.17.conv3.weight",
    "layer3.17.bn2.weight",
    "layer3.17.bn2.bias",
    "layer3.17.conv2.weight",
    "layer3.17.bn1.weight",
    "layer3.17.bn1.bias",
    "layer3.17.conv1.weight",
    "layer3.16.bn3.weight",
    "layer3.16.bn3.bias",
    "layer3.16.conv3.weight",
    "layer3.16.bn2.weight",
    "layer3.16.bn2.bias",
    "layer3.16.conv2.weight",
    "layer3.16.bn1.weight",
    "layer3.16.bn1.bias",
    "layer3.16.conv1.weight",
    "layer3.15.bn3.weight",
    "layer3.15.bn3.bias",
    "layer3.15.conv3.weight",
    "layer3.15.bn2.weight",
    "layer3.15.bn2.bias",
    "layer3.15.conv2.weight",
    "layer3.15.bn1.weight",
    "layer3.15.bn1.bias",
    "layer3.15.conv1.weight",
    "layer3.14.bn3.weight",
    "layer3.14.bn3.bias",
    "layer3.14.conv3.weight",
    "layer3.14.bn2.weight",
    "layer3.14.bn2.bias",
    "layer3.14.conv2.weight",
    "layer3.14.bn1.weight",
    "layer3.14.bn1.bias",
    "layer3.14.conv1.weight",
    "layer3.13.bn3.weight",
    "layer3.13.bn3.bias",
    "layer3.13.conv3.weight",
    "layer3.13.bn2.weight",
    "layer3.13.bn2.bias",
    "layer3.13.conv2.weight",
    "layer3.13.bn1.weight",
    "layer3.13.bn1.bias",
    "layer3.13.conv1.weight",
    "layer3.12.bn3.weight",
    "layer3.12.bn3.bias",
    "layer3.12.conv3.weight",
    "layer3.12.bn2.weight",
    "layer3.12.bn2.bias",
    "layer3.12.conv2.weight",
    "layer3.12.bn1.weight",
    "layer3.12.bn1.bias",
    "layer3.12.conv1.weight",
    "layer3.11.bn3.weight",
    "layer3.11.bn3.bias",
    "layer3.11.conv3.weight",
    "layer3.11.bn2.weight",
    "layer3.11.bn2.bias",
    "layer3.11.conv2.weight",
    "layer3.11.bn1.weight",
    "layer3.11.bn1.bias",
    "layer3.11.conv1.weight",
    "layer3.10.bn3.weight",
    "layer3.10.bn3.bias",
    "layer3.10.conv3.weight",
    "layer3.10.bn2.weight",
    "layer3.10.bn2.bias",
    "layer3.10.conv2.weight",
    "layer3.10.bn1.weight",
    "layer3.10.bn1.bias",
    "layer3.10.conv1.weight",
    "layer3.9.bn3.weight",
    "layer3.9.bn3.bias",
    "layer3.9.conv3.weight",
    "layer3.9.bn2.weight",
    "layer3.9.bn2.bias",
    "layer3.9.conv2.weight",
    "layer3.9.bn1.weight",
    "layer3.9.bn1.bias",
    "layer3.9.conv1.weight",
    "layer3.8.bn3.weight",
    "layer3.8.bn3.bias",
    "layer3.8.conv3.weight",
    "layer3.8.bn2.weight",
    "layer3.8.bn2.bias",
    "layer3.8.conv2.weight",
    "layer3.8.bn1.weight",
    "layer3.8.bn1.bias",
    "layer3.8.conv1.weight",
    "layer3.7.bn3.weight",
    "layer3.7.bn3.bias",
    "layer3.7.conv3.weight",
    "layer3.7.bn2.weight",
    "layer3.7.bn2.bias",
    "layer3.7.conv2.weight",
    "layer3.7.bn1.weight",
    "layer3.7.bn1.bias",
    "layer3.7.conv1.weight",
    "layer3.6.bn3.weight",
    "layer3.6.bn3.bias",
    "layer3.6.conv3.weight",
    "layer3.6.bn2.weight",
    "layer3.6.bn2.bias",
    "layer3.6.conv2.weight",
    "layer3.6.bn1.weight",
    "layer3.6.bn1.bias",
    "layer3.6.conv1.weight",
    "layer3.5.bn3.weight",
    "layer3.5.bn3.bias",
    "layer3.5.conv3.weight",
    "layer3.5.bn2.weight",
    "layer3.5.bn2.bias",
    "layer3.5.conv2.weight",
    "layer3.5.bn1.weight",
    "layer3.5.bn1.bias",
    "layer3.5.conv1.weight",
    "layer3.4.bn3.weight",
    "layer3.4.bn3.bias",
    "layer3.4.conv3.weight",
    "layer3.4.bn2.weight",
    "layer3.4.bn2.bias",
    "layer3.4.conv2.weight",
    "layer3.4.bn1.weight",
    "layer3.4.bn1.bias",
    "layer3.4.conv1.weight",
    "layer3.3.bn3.weight",
    "layer3.3.bn3.bias",
    "layer3.3.conv3.weight",
    "layer3.3.bn2.weight",
    "layer3.3.bn2.bias",
    "layer3.3.conv2.weight",
    "layer3.3.bn1.weight",
    "layer3.3.bn1.bias",
    "layer3.3.conv1.weight",
    "layer3.2.bn3.weight",
    "layer3.2.bn3.bias",
    "layer3.2.conv3.weight",
    "layer3.2.bn2.weight",
    "layer3.2.bn2.bias",
    "layer3.2.conv2.weight",
    "layer3.2.bn1.weight",
    "layer3.2.bn1.bias",
    "layer3.2.conv1.weight",
    "layer3.1.bn3.weight",
    "layer3.1.bn3.bias",
    "layer3.1.conv3.weight",
    "layer3.1.bn2.weight",
    "layer3.1.bn2.bias",
    "layer3.1.conv2.weight",
    "layer3.1.bn1.weight",
    "layer3.1.bn1.bias",
    "layer3.1.conv1.weight",
    "layer3.0.downsample.1.weight",
    "layer3.0.downsample.1.bias",
    "layer3.0.downsample.0.weight",
    "layer3.0.bn3.weight",
    "layer3.0.bn3.bias",
    "layer3.0.conv3.weight",
    "layer3.0.bn2.weight",
    "layer3.0.bn2.bias",
    "layer3.0.conv2.weight",
    "layer3.0.bn1.weight",
    "layer3.0.bn1.bias",
    "layer3.0.conv1.weight",
    "layer2.3.bn3.weight",
    "layer2.3.bn3.bias",
    "layer2.3.conv3.weight",
    "layer2.3.bn2.weight",
    "layer2.3.bn2.bias",
    "layer2.3.conv2.weight",
    "layer2.3.bn1.weight",
    "layer2.3.bn1.bias",
    "layer2.3.conv1.weight",
    "layer2.2.bn3.weight",
    "layer2.2.bn3.bias",
    "layer2.2.conv3.weight",
    "layer2.2.bn2.weight",
    "layer2.2.bn2.bias",
    "layer2.2.conv2.weight",
    "layer2.2.bn1.weight",
    "layer2.2.bn1.bias",
    "layer2.2.conv1.weight",
    "layer2.1.bn3.weight",
    "layer2.1.bn3.bias",
    "layer2.1.conv3.weight",
    "layer2.1.bn2.weight",
    "layer2.1.bn2.bias",
    "layer2.1.conv2.weight",
    "layer2.1.bn1.weight",
    "layer2.1.bn1.bias",
    "layer2.1.conv1.weight",
    "layer2.0.downsample.1.weight",
    "layer2.0.downsample.1.bias",
    "layer2.0.downsample.0.weight",
    "layer2.0.bn3.weight",
    "layer2.0.bn3.bias",
    "layer2.0.conv3.weight",
    "layer2.0.bn2.weight",
    "layer2.0.bn2.bias",
    "layer2.0.conv2.weight",
    "layer2.0.bn1.weight",
    "layer2.0.bn1.bias",
    "layer2.0.conv1.weight",
    "layer1.2.bn3.weight",
    "layer1.2.bn3.bias",
    "layer1.2.conv3.weight",
    "layer1.2.bn2.weight",
    "layer1.2.bn2.bias",
    "layer1.2.conv2.weight",
    "layer1.2.bn1.weight",
    "layer1.2.bn1.bias",
    "layer1.2.conv1.weight",
    "layer1.1.bn3.weight",
    "layer1.1.bn3.bias",
    "layer1.1.conv3.weight",
    "layer1.1.bn2.weight",
    "layer1.1.bn2.bias",
    "layer1.1.conv2.weight",
    "layer1.1.bn1.weight",
    "layer1.1.bn1.bias",
    "layer1.1.conv1.weight",
    "layer1.0.downsample.1.weight",
    "layer1.0.downsample.1.bias",
    "layer1.0.downsample.0.weight",
    "layer1.0.bn3.weight",
    "layer1.0.bn3.bias",
    "layer1.0.conv3.weight",
    "layer1.0.bn2.weight",
    "layer1.0.bn2.bias",
    "layer1.0.conv2.weight",
    "layer1.0.bn1.weight",
    "layer1.0.bn1.bias",
    "layer1.0.conv1.weight",
    "bn1.weight",
    "bn1.bias",
    "conv1.weight"
  ],
  "tensor sizes": [
    1000,
    2048000,
    2048,
    2048,
    1048576,
    512,
    512,
    2359296,
    512,
    512,
    1048576,
    2048,
    2048,
    1048576,
    512,
    512,
    2359296,
    512,
    512,
    1048576,
    2048,
    2048,
    2097152,
    2048,
    2048,
    1048576,
    512,
    512,
    2359296,
    512,
    512,
    524288,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    262144,
    1024,
    1024,
    524288,
    1024,
    1024,
    262144,
    256,
    256,
    589824,
    256,
    256,
    131072,
    512,
    512,
    65536,
    128,
    128,
    147456,
    128,
    128,
    65536,
    512,
    512,
    65536,
    128,
    128,
    147456,
    128,
    128,
    65536,
    512,
    512,
    65536,
    128,
    128,
    147456,
    128,
    128,
    65536,
    512,
    512,
    131072,
    512,
    512,
    65536,
    128,
    128,
    147456,
    128,
    128,
    32768,
    256,
    256,
    16384,
    64,
    64,
    36864,
    64,
    64,
    16384,
    256,
    256,
    16384,
    64,
    64,
    36864,
    64,
    64,
    16384,
    256,
    256,
    16384,
    256,
    256,
    16384,
    64,
    64,
    36864,
    64,
    64,
    4096,
    64,
    64,
    9408
  ],
  "options": [
    14,
    5,
    14,
    14,
    13,
    14,
    14,
    5,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    5,
    14,
    14,
    13,
    14,
    14,
    5,
    14,
    14,
    13,
    14,
    14,
    5,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    13,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    13,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    13,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    13,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    13,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14,
    14
  ]
}